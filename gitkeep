
{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "7b1e7b16",
      "metadata": {
        "id": "7b1e7b16"
      },
      "source": [
        "# Продолжение numpy, matplotlib\n",
        "\n",
        "В прошлый раз мы научились работать с массивами в numpy. В этот раз мы узнаем о дополнительном функционале в библиотеке numpy и попрактикуемся чуть больше в визуализации."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ed796b6a",
      "metadata": {
        "id": "ed796b6a"
      },
      "source": [
        "## Объекты\n",
        "В стандартный набор для работы с массивами входят следующие функции:\n",
        "- `np.arange` -- возвращает массив точек на равноудаленных с определенным шагом (по умолчанию шаг=1)\n",
        "- `numpy.linspace` -- возвращает массив определенно количества точек между заданными границами\n",
        "- `numpy.logspace` -- возвращает массив определенно количества точек между заданными границами в логарифмическом масштабе\n",
        "- `np.eye` -- создает двумерный массив в виде единичной матрицы\n",
        "- `np.ones` -- создает массив определенного размера заполненный 1\n",
        "- `np.zeros` -- создает массив определенного размера заполненный 0"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "bf31032a",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bf31032a",
        "outputId": "3edfb809-72f6-4977-ad6f-5cce1ce030fa"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "arange(3) [0 1 2]\n",
            "arange(-3, 3) [-3 -2 -1  0  1  2]\n",
            "arange(3, 10.1, 1) [ 3.  4.  5.  6.  7.  8.  9. 10.]\n",
            "linspace(3, 10, 8) [ 3.  4.  5.  6.  7.  8.  9. 10.]\n",
            "logspace(-4, 0, 5) [1.e-04 1.e-03 1.e-02 1.e-01 1.e+00]\n",
            "eye(5)\n",
            " [[1. 0. 0. 0. 0.]\n",
            " [0. 1. 0. 0. 0.]\n",
            " [0. 0. 1. 0. 0.]\n",
            " [0. 0. 0. 1. 0.]\n",
            " [0. 0. 0. 0. 1.]]\n",
            "ones(10) [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n",
            "zeros(10) [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "\n",
        "print(\"arange(3)\", np.arange(3))\n",
        "print(\"arange(-3, 3)\", np.arange(-3, 3))\n",
        "print(\"arange(3, 10.1, 1)\", np.arange(3, 10.1, 1))\n",
        "print(\"linspace(3, 10, 8)\", np.linspace(3, 10, 8))\n",
        "print(\"logspace(-4, 0, 5)\", np.logspace(-4, 0, 5))\n",
        "print(\"eye(5)\\n\", np.eye(5))\n",
        "print(\"ones(10)\", np.ones(10))\n",
        "print(\"zeros(10)\", np.zeros(10))"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3cb4f550",
      "metadata": {
        "id": "3cb4f550"
      },
      "source": [
        "## Методы объектов\n",
        "\n",
        "Для каждого массива определены следующие методы (операции, которые можно совершать с массивом из **коробки**):\n",
        "- `sum` -- просуммировать элементы\n",
        "- `mean` -- усреднить элементы\n",
        "- `std` -- посчитать среднеквадратичное отклонение\n",
        "- `min` -- найти значение минимального элемента\n",
        "- `max` -- найти значение максимального элемента\n",
        "- `argmin` -- найти индекс минимального элемента\n",
        "- `argmax` -- найти значение максимального элемента\n",
        "- `tolist` -- превратить массив в список\n",
        "- `tobytes` -- превратить массив в байт-строку"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3841d71d",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3841d71d",
        "outputId": "4a372529-2369-417a-f0cb-7e77295fcc64"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 0.  1.  2.  3.  4.  5.]\n",
            " [ 6.  7.  8.  9. 10. 11.]\n",
            " [12. 13. 14. 15. 16. 17.]\n",
            " [18. 19. 20. 21. 22. 23.]\n",
            " [24. 25. 26. 27. 28. 29.]\n",
            " [30. 31. 32. 33. 34. 35.]] \n",
            "\n",
            "[ 15.  51.  87. 123. 159. 195.] \n",
            "\n",
            "[15. 16. 17. 18. 19. 20.] \n",
            "\n",
            "10.388294694831615 \n",
            "\n",
            "0 \n",
            "\n",
            "[5 5 5 5 5 5] \n",
            "\n",
            "[[0.0, 1.0, 2.0, 3.0, 4.0, 5.0], [6.0, 7.0, 8.0, 9.0, 10.0, 11.0], [12.0, 13.0, 14.0, 15.0, 16.0, 17.0], [18.0, 19.0, 20.0, 21.0, 22.0, 23.0], [24.0, 25.0, 26.0, 27.0, 28.0, 29.0], [30.0, 31.0, 32.0, 33.0, 34.0, 35.0]] \n",
            "\n",
            "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xf0?\\x00\\x00\\x00\\x00\\x00\\x00\\x00@\\x00\\x00\\x00\\x00\\x00\\x00\\x08@\\x00\\x00\\x00\\x00\\x00\\x00\\x10@\\x00\\x00\\x00\\x00\\x00\\x00\\x14@\\x00\\x00\\x00\\x00\\x00\\x00\\x18@\\x00\\x00\\x00\\x00\\x00\\x00\\x1c@\\x00\\x00\\x00\\x00\\x00\\x00 @\\x00\\x00\\x00\\x00\\x00\\x00\"@\\x00\\x00\\x00\\x00\\x00\\x00$@\\x00\\x00\\x00\\x00\\x00\\x00&@\\x00\\x00\\x00\\x00\\x00\\x00(@\\x00\\x00\\x00\\x00\\x00\\x00*@\\x00\\x00\\x00\\x00\\x00\\x00,@\\x00\\x00\\x00\\x00\\x00\\x00.@\\x00\\x00\\x00\\x00\\x00\\x000@\\x00\\x00\\x00\\x00\\x00\\x001@\\x00\\x00\\x00\\x00\\x00\\x002@\\x00\\x00\\x00\\x00\\x00\\x003@\\x00\\x00\\x00\\x00\\x00\\x004@\\x00\\x00\\x00\\x00\\x00\\x005@\\x00\\x00\\x00\\x00\\x00\\x006@\\x00\\x00\\x00\\x00\\x00\\x007@\\x00\\x00\\x00\\x00\\x00\\x008@\\x00\\x00\\x00\\x00\\x00\\x009@\\x00\\x00\\x00\\x00\\x00\\x00:@\\x00\\x00\\x00\\x00\\x00\\x00;@\\x00\\x00\\x00\\x00\\x00\\x00<@\\x00\\x00\\x00\\x00\\x00\\x00=@\\x00\\x00\\x00\\x00\\x00\\x00>@\\x00\\x00\\x00\\x00\\x00\\x00?@\\x00\\x00\\x00\\x00\\x00\\x00@@\\x00\\x00\\x00\\x00\\x00\\x80@@\\x00\\x00\\x00\\x00\\x00\\x00A@\\x00\\x00\\x00\\x00\\x00\\x80A@' \n",
            "\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "\n",
        "array = np.linspace(0, 35, 36).reshape(6, 6)\n",
        "\n",
        "print(array, \"\\n\")\n",
        "print(array.sum(axis=1), \"\\n\")\n",
        "print(array.mean(axis=0), \"\\n\")\n",
        "print(array.std(axis=(0,1)), \"\\n\")\n",
        "print(array.argmin(), \"\\n\")\n",
        "print(array.argmax(axis=0), \"\\n\")\n",
        "print(array.tolist(), \"\\n\")\n",
        "print(array.tobytes(), \"\\n\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "9f1a7107",
      "metadata": {
        "id": "9f1a7107"
      },
      "source": [
        "## Случайности\n",
        "\n",
        "В numpy реализован также пакет для работы со случайными величинами.\n",
        "\n",
        "В реальности, абсолютную случайность достичь невозможно. Никакой алгоритм не может повторить природную случайность. Поэтому при работе с алгоритмами, которые основаны на случайном выборе, говорят о псевдослучайности. Псевдослучайность -- математический алгоритм получения псевдослучайных величин.\n",
        "\n",
        "Псевдослучайны алгортмы могут давать длинную последовательность независимых событий. Повторяются они не очень быстро (можете попробовать проверить).\n",
        "\n",
        "Для псевдопоследовательности вводится понятие `seed`. Это параметр, который формально определяет начало нашей псевдопоследовательности. `seed` фиксируется для воспроизведения псевдо-эксперимента.\n",
        "\n",
        "Модуль, который отвечает за случайные величины находится по пути\n",
        "```python\n",
        "import numpy as np\n",
        "np.random\n",
        "```\n",
        "Рассмотрим основные функции:\n",
        "- `normal` -- нормальное распределение\n",
        "- `poisson` -- распределение Пуассона\n",
        "- `randint` -- равномерное распределение целых чисел\n",
        "- `rand` -- равномерное распределение на отрезке [0, 1]\n",
        "- `seed` -- устанавливает `seed` псевдослучайной последовательности"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c14c117e",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c14c117e",
        "outputId": "bbe3021c-1dbb-485b-ccdc-806bd278bb31"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[ 59.6714153   -3.82643012  74.76885381 162.30298564 -13.41533747\n",
            " -13.41369569 167.92128155  86.74347292 -36.94743859  64.25600436] \n",
            "\n",
            "[ 7  8  9 11  8 10  7 11 11  8 12  6  7  8 10] \n",
            "\n",
            "[17 11  1  9  3 13 15 14  7 13  7 15 12 17 14 12  8 14 12  0  6  8  0] \n",
            "\n",
            "[0.19871568 0.00552212 0.81546143 0.70685734 0.72900717 0.77127035\n",
            " 0.07404465 0.35846573 0.11586906 0.86310343 0.62329813 0.33089802] \n",
            "\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "\n",
        "np.random.seed(42)\n",
        "print(np.random.normal(10, 100, size=10), \"\\n\")\n",
        "print(np.random.poisson(10, size=15), \"\\n\")\n",
        "print(np.random.randint(20, size=23), \"\\n\")\n",
        "print(np.random.rand(12), \"\\n\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "eacb5954",
      "metadata": {
        "id": "eacb5954"
      },
      "source": [
        "### numpy Задание\n",
        "\n",
        "1. Выставьте `seed` случайной последовательности в 1\n",
        "2. Сгенерируйте массив из 120 случайных равномернораспределенных чисел с отрезка [0, 1]\n",
        "3. Посчитайте среднее, среднеквадратичное отклонение и сумму для элементов предыдущего массива\n",
        "4. Превратите одномерный массив в двумерный размерности (12, 10)\n",
        "5. Посчитайте среднее, среднеквадратичное отклонение и сумму для элементов предыдущего массива вдоль направлений 0, 1 (для каждой величины должно быть по два вычисления)\n",
        "6. Найдите минимальные и максимальные значения в каждом столбце двумерного массива\n",
        "8. Найдите индексы минимальных и максимальных элементов в каждой строке двумерного массива"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "np.random.seed(1)"
      ],
      "metadata": {
        "id": "787ZW0pc6XAs"
      },
      "id": "787ZW0pc6XAs",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "random = np.random.rand(120)\n",
        "print(random)"
      ],
      "metadata": {
        "id": "oIfe01-u9fQq"
      },
      "id": "oIfe01-u9fQq",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(random.mean())\n",
        "print(random.std())\n",
        "print(random.sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2mqfPQzN9ebQ",
        "outputId": "d19899b1-844b-46e0-f5db-66c639a0ced4"
      },
      "id": "2mqfPQzN9ebQ",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.5010260890588503\n",
            "0.3016583383967994\n",
            "60.12313068706203\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "random = np.reshape(random,(12,10))\n",
        "print(random)"
      ],
      "metadata": {
        "id": "vg94tBJG9eQ3"
      },
      "id": "vg94tBJG9eQ3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(random.mean(axis=0))\n",
        "print(random.std(axis=0))\n",
        "\n",
        "print(random.mean(axis=1))\n",
        "print(random.std(axis=1))"
      ],
      "metadata": {
        "id": "dlwApokH9eFZ"
      },
      "id": "dlwApokH9eFZ",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(random.max(axis=0))\n",
        "print(random.min(axis=1))"
      ],
      "metadata": {
        "id": "M_YpdS-S9d6N"
      },
      "id": "M_YpdS-S9d6N",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(random.argmin(axis=1))\n",
        "print(random.argmax(axis=1))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1HdGKDJh9dpi",
        "outputId": "30616a88-3df3-4038-b99e-f17001be9134"
      },
      "id": "1HdGKDJh9dpi",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[2 4 7 8 4 0 4 1 4 8 6 4]\n",
            "[1 3 1 2 0 9 8 6 7 1 9 2]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "id": "d869c55f",
      "metadata": {
        "id": "d869c55f"
      },
      "source": [
        "## Еще больше рисования\n",
        "\n",
        "В прошлый раз был разобран метод рисовки ломаной кривой и точек с *усами*. В этот раз предстоит узнать о гистограммах и просто точечных изображениях.\n",
        "\n",
        "Гистограммы применимы в случае экспериентов с большим количеством повторений. Например, количество частиц на счетчике Гейгера за определенный промежуток времени.\n",
        "\n",
        "Посмотрим на следующий пример, который генирирует по распределению Пуассона 10000 событий, а затем отображает их."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "dbd452d1",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 340
        },
        "id": "dbd452d1",
        "outputId": "ddb8ec5b-9fb2-42a2-c8a3-3a64a993d717"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x331.2 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "import numpy as np\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "np.random.seed(42)\n",
        "data = np.random.poisson(5, size=(10000,))\n",
        "\n",
        "fig, axs = plt.subplots(1, 3, figsize=(15, 4.6))\n",
        "\n",
        "axs[0].hist(data, [x for x in range(20)],label=\"coarse hist\")\n",
        "axs[1].hist(data, \"auto\", label=\"fine hist\")\n",
        "axs[2].hist(data, np.array([0, 4, 5, 6, 8.5, 9, 9.5, 10, 10.5, 15]), label=\"sad hist\")\n",
        "\n",
        "titles = [\"Strange data\", \"Interesting data\", \"Weird master\"]\n",
        "for ax, title in zip(axs, titles):\n",
        "    ax.set_title(title)\n",
        "    ax.set_ylabel(\"Events\")\n",
        "    ax.set_xlabel(\"value\")\n",
        "    ax.legend()\n",
        "\n",
        "plt.tight_layout()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "56f260a4",
      "metadata": {
        "id": "56f260a4"
      },
      "source": [
        "`pyplot.subplots` -- создает фигуру с несколькими окнами для отрисовки данных\n",
        "\n",
        "Как видно, одни те же данные могут быть совсем по разному отображены, если использовать разное разбиение (или же разный биннинг) для оси икс. Разбиение может быть задано вариативно (третий график).\n",
        "\n",
        "Отоброзим наши данные на плоскости. Первую половину точек возьмем в качестве первой координаты, вторую половину -- в качестве второй координаты"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "790db514",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "790db514",
        "outputId": "b7e507fb-f9e7-4c4d-dc93-7ed3c917483b"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "import numpy as np\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "np.random.seed(42)\n",
        "data = np.random.poisson(5, size=(10000,))\n",
        "x = data[:5000]\n",
        "y = data[5000:]\n",
        "\n",
        "plt.scatter(x, y, s=10)\n",
        "\n",
        "plt.tight_layout()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3e43237e",
      "metadata": {
        "id": "3e43237e"
      },
      "source": [
        "В плоском виде это не информативно. Нельзя понять сколько точек попало в одну ячейку. Воспользуемся методом из numpy для разделения на разные корзины (бины)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "ecd6d410",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 277
        },
        "id": "ecd6d410",
        "outputId": "eb2ab0c2-a854-414e-c6be-26653c4489e4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.colorbar.Colorbar at 0x7f64bab41fd0>"
            ]
          },
          "metadata": {},
          "execution_count": 69
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 288x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "xedges = np.linspace(-0.5, 18.5, 19)\n",
        "yedges = np.linspace(-0.5, 18.5, 19)\n",
        "distribution, xedges, yedges = np.histogram2d(x, y, bins=(xedges, yedges))\n",
        "\n",
        "cs = plt.matshow(distribution)\n",
        "plt.colorbar(cs)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "55e916d5",
      "metadata": {
        "id": "55e916d5"
      },
      "source": [
        "## Data Analysis again\n",
        "\n",
        "\n",
        "Функция `fake_data_generator` выдает данные какого-то эксперимента. Но это не беда, ведь мы всегда можем обработать данные!\n",
        "\n",
        "Узнайте свой порядковый номер в группе и с помощью функции `get_numbers` получите свои входные значения для функции `fake_data_generator`.\n",
        "\n",
        "Полученные  экспериентальные данные используйте для нанесения на график. Затем попрбуйте *прикинуть* параметры прямой, которая могла бы проходить через экспериентальные точки.\n",
        "\n",
        "Пример генерации данных:\n",
        "```python\n",
        "student = 0  # Teacher's number\n",
        "x, y = fake_data_generator(*get_numbers(student))\n",
        "```\n",
        "Сгенерируйте свои числа для задачи\n",
        "Нанесите точки на график. В качестве ошибок по x используйте половину расстояния между соседними точками. Для ошибок по y используйте корень квадратный от модуля значения. Добавьте легенду \"DATA\"\n",
        "Нанесите сетку на график\n",
        "Выделите штрихованную прямую синего цвета, которая выделяет средний уровень точек по оси абсцисс. Добавьте легенду со значением среднего \"mean x = \"\n",
        "Выделите штрих-пунктирную прямую красного цвета, которая выделяет средний уровень точек по оси ординат. Добавьте легенду со значением среднего \"mean y = \"\n",
        "Нарисуйте черным цветом прямую, которая примерно описывает данные на графике. Добавьте легенду \"fit\"\n",
        "Точки пересечения подгоночной кривой и средних значений выделить синим цветом\n",
        "Добавить описание для оси абсцисс  $\\xi, cm$\n",
        "Добавить описание для оси ординат $\\rho, mm^{-3}$\n",
        "Легенду разместите в правом нижнем углу или же в верхнем правом\n",
        "\n",
        "\n",
        "В этот раз мы попробуем обработать данные с помощью numpy. Требуется воспользоваться функцией `numpy.polynomial`. На вход она принимает три аргумента: x/y координаты точек для подгонки и `deg=1` количество степеней свободы кривой. При значении `deg=1` кривая будет прямой.\n",
        "\n",
        "Попробуйте сгенерировать данные в соотвествии с порядковым номером в списке группы. После подгоните данные с использованием функции `numpy.polynomial`. Проверьте дополнительно методом МНК какие коэффициенты должны поучится для наклона и смещения прямой "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 66,
      "id": "2aae1615",
      "metadata": {
        "id": "2aae1615"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import matplotlib\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "matplotlib.rcParams.update(matplotlib.rcParamsDefault)\n",
        "\n",
        "\n",
        "def get_numbers(student):\n",
        "    return student, (student + 4) % 5 + 3, student % 2 * 10 + 12, (student % 5 * 3 + 7) * 3 \n",
        "\n",
        "def fake_data_generator(seed, vmin=0, vmax=10, size=100):\n",
        "    import numpy as np\n",
        "    np.random.seed(seed)\n",
        "    data = np.random.randint(vmin, vmax, size=20)\n",
        "    mean = data.mean()\n",
        "    std = data.std()\n",
        "    noise = np.random.normal(loc=mean, scale=std**.5, size=size)\n",
        "    fake_x = np.array([-5 + i * 20 / size for i in range(size)])\n",
        "    \n",
        "    linear = lambda x, k=(.5 - np.random.rand()) * 15, b=np.random.rand()*10: k * x + b\n",
        "    linear_data = linear(fake_x)\n",
        "    fake_y = linear_data + noise\n",
        "    return fake_x, fake_y"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "224f4315",
      "metadata": {
        "id": "224f4315",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ffde23cb-4a19-4215-c417-1cf9521e1845"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<module 'numpy.polynomial' from '/usr/local/lib/python3.7/dist-packages/numpy/polynomial/__init__.py'>"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ],
      "source": [
        "\n",
        "np.polynomial"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 67,
      "id": "4d96eb06",
      "metadata": {
        "id": "4d96eb06",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 470
        },
        "outputId": "449d1c32-f4bd-48ca-958b-859444e0c694"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7f64e8ab5e90>"
            ]
          },
          "metadata": {},
          "execution_count": 67
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import math\n",
        "import numpy as np\n",
        "import matplotlib\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "\n",
        "x,y = fake_data_generator(get_numbers(7))\n",
        "\n",
        "fig, ax = plt.subplots()\n",
        "ax.grid()\n",
        "\n",
        "y_error = abs(y)**0.5\n",
        "ax.errorbar(x,y,xerr=0.2,yerr=y_error,fmt= 'y.',label='ошибки')\n",
        "\n",
        "x_mean = x.mean()\n",
        "ax.vlines(x_mean, y.min(), y.max(), color = 'b',linestyles = '--',label=f'mean x = {x_mean}')\n",
        "y_mean = y.mean()\n",
        "ax.hlines(y_mean,x.max(),x.min(),colors='r',linestyles='--',label=f'mean y = {round(y_mean)}')\n",
        "\n",
        "ax.set_xlabel(r'$\\xi, cm$')\n",
        "ax.set_ylabel(r'$\\rho, mm^{-3}$')\n",
        "\n",
        "plt.plot(x_mean,y_mean,'b.')\n",
        "\n",
        "#МНК\n",
        "b = (((x*y).mean())-(x_mean*y_mean))/((x**2).mean()-x_mean**2)\n",
        "a = y_mean - b*x_mean\n",
        "\n",
        "z = np.linspace(-5,15,100)\n",
        "plt.plot(z,a+b*z,'black',label='fit')\n",
        "\n",
        "plt.legend()"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "4lpu-lk9ch8m"
      },
      "id": "4lpu-lk9ch8m",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#5-ая лабораторная работа\n",
        "print(np.polyfit(x,y,1))\n",
        "print(b,a)\n",
        "# polyfit совпадает с МНК"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3NnX_rCUsstN",
        "outputId": "e893b218-d4f7-4476-a6b3-8f0b620bb7f3"
      },
      "id": "3NnX_rCUsstN",
      "execution_count": 325,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[-2.14053197 10.96071971]\n",
            "-2.1405319744154108 10.960719714033498\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Доп.задачи\n",
        "\n",
        "#1\n",
        "import numpy as np\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "size = 10**6\n",
        "data = np.random.normal(10, size=size)\n",
        "plt.hist(data,'auto')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "N86iEZG6Hejv",
        "outputId": "5cd17cc9-52ad-4c66-da45-aeec118695c7"
      },
      "id": "N86iEZG6Hejv",
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([1.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,\n",
              "        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,\n",
              "        0.0000e+00, 0.0000e+00, 1.0000e+00, 0.0000e+00, 2.0000e+00,\n",
              "        0.0000e+00, 1.0000e+00, 1.0000e+00, 0.0000e+00, 3.0000e+00,\n",
              "        1.0000e+00, 0.0000e+00, 2.0000e+00, 1.0000e+00, 2.0000e+00,\n",
              "        3.0000e+00, 1.0000e+00, 3.0000e+00, 5.0000e+00, 3.0000e+00,\n",
              "        2.0000e+00, 2.0000e+00, 5.0000e+00, 5.0000e+00, 5.0000e+00,\n",
              "        6.0000e+00, 1.0000e+01, 6.0000e+00, 1.0000e+01, 5.0000e+00,\n",
              "        1.6000e+01, 7.0000e+00, 2.1000e+01, 1.6000e+01, 1.9000e+01,\n",
              "        1.8000e+01, 2.6000e+01, 3.1000e+01, 2.6000e+01, 1.9000e+01,\n",
              "        3.8000e+01, 3.0000e+01, 3.7000e+01, 4.6000e+01, 4.4000e+01,\n",
              "        4.4000e+01, 5.3000e+01, 6.2000e+01, 5.1000e+01, 5.9000e+01,\n",
              "        6.6000e+01, 9.0000e+01, 1.0200e+02, 9.4000e+01, 9.7000e+01,\n",
              "        9.9000e+01, 1.2300e+02, 1.1200e+02, 1.2700e+02, 1.3900e+02,\n",
              "        1.3700e+02, 1.6700e+02, 1.9700e+02, 1.7200e+02, 2.3700e+02,\n",
              "        2.2500e+02, 2.6700e+02, 2.8600e+02, 3.0200e+02, 3.0300e+02,\n",
              "        3.2200e+02, 3.4800e+02, 3.9600e+02, 4.1300e+02, 4.2300e+02,\n",
              "        4.8700e+02, 5.2400e+02, 5.5500e+02, 6.1400e+02, 5.7700e+02,\n",
              "        6.4000e+02, 7.4400e+02, 7.2500e+02, 7.8300e+02, 8.4200e+02,\n",
              "        9.3400e+02, 9.4700e+02, 9.5700e+02, 1.0850e+03, 1.1260e+03,\n",
              "        1.1760e+03, 1.2840e+03, 1.3300e+03, 1.3380e+03, 1.5040e+03,\n",
              "        1.5290e+03, 1.6420e+03, 1.7580e+03, 1.8380e+03, 1.9460e+03,\n",
              "        2.0480e+03, 2.1070e+03, 2.2000e+03, 2.2950e+03, 2.4150e+03,\n",
              "        2.5810e+03, 2.6890e+03, 2.8280e+03, 2.9360e+03, 3.1070e+03,\n",
              "        3.1870e+03, 3.3960e+03, 3.4740e+03, 3.6150e+03, 3.7460e+03,\n",
              "        3.9200e+03, 4.0700e+03, 4.2730e+03, 4.4100e+03, 4.5320e+03,\n",
              "        4.7600e+03, 4.8200e+03, 5.0330e+03, 5.0790e+03, 5.5080e+03,\n",
              "        5.5730e+03, 5.6040e+03, 5.9510e+03, 6.2000e+03, 6.1180e+03,\n",
              "        6.3050e+03, 6.5760e+03, 6.7080e+03, 7.0120e+03, 7.0140e+03,\n",
              "        7.1820e+03, 7.3410e+03, 7.6800e+03, 7.5970e+03, 7.9590e+03,\n",
              "        8.1260e+03, 8.2690e+03, 8.4240e+03, 8.5160e+03, 8.7460e+03,\n",
              "        8.9070e+03, 8.9930e+03, 9.1450e+03, 9.2350e+03, 9.3980e+03,\n",
              "        9.5490e+03, 9.8830e+03, 9.8770e+03, 9.9480e+03, 1.0043e+04,\n",
              "        1.0253e+04, 1.0123e+04, 1.0382e+04, 1.0447e+04, 1.0496e+04,\n",
              "        1.0544e+04, 1.0518e+04, 1.0628e+04, 1.0593e+04, 1.0787e+04,\n",
              "        1.0636e+04, 1.0783e+04, 1.0788e+04, 1.0782e+04, 1.0711e+04,\n",
              "        1.0800e+04, 1.0750e+04, 1.0616e+04, 1.0524e+04, 1.0465e+04,\n",
              "        1.0678e+04, 1.0553e+04, 1.0336e+04, 1.0386e+04, 1.0269e+04,\n",
              "        1.0186e+04, 9.9770e+03, 1.0199e+04, 9.8290e+03, 9.8470e+03,\n",
              "        9.7940e+03, 9.5900e+03, 9.2610e+03, 9.3140e+03, 9.2860e+03,\n",
              "        9.1340e+03, 8.8130e+03, 8.6550e+03, 8.4420e+03, 8.3800e+03,\n",
              "        8.3930e+03, 8.1740e+03, 7.8320e+03, 7.6870e+03, 7.6440e+03,\n",
              "        7.3600e+03, 7.2180e+03, 6.9310e+03, 6.8650e+03, 6.7440e+03,\n",
              "        6.4590e+03, 6.2880e+03, 6.1030e+03, 6.0760e+03, 5.7840e+03,\n",
              "        5.5520e+03, 5.3260e+03, 5.1250e+03, 5.2180e+03, 4.9720e+03,\n",
              "        4.8850e+03, 4.6060e+03, 4.5440e+03, 4.2550e+03, 4.1740e+03,\n",
              "        3.9030e+03, 3.9340e+03, 3.7350e+03, 3.6560e+03, 3.3810e+03,\n",
              "        3.2360e+03, 3.1460e+03, 3.0040e+03, 2.9210e+03, 2.7260e+03,\n",
              "        2.5840e+03, 2.5160e+03, 2.3250e+03, 2.3360e+03, 2.1110e+03,\n",
              "        2.0350e+03, 1.9430e+03, 1.8170e+03, 1.7360e+03, 1.6850e+03,\n",
              "        1.6560e+03, 1.5070e+03, 1.4490e+03, 1.3880e+03, 1.3410e+03,\n",
              "        1.2890e+03, 1.1570e+03, 1.1150e+03, 1.0150e+03, 9.5000e+02,\n",
              "        9.0600e+02, 8.6000e+02, 7.9300e+02, 7.5800e+02, 7.5600e+02,\n",
              "        6.9900e+02, 6.0700e+02, 5.9100e+02, 6.1000e+02, 4.9200e+02,\n",
              "        4.8500e+02, 4.5100e+02, 4.4300e+02, 4.1500e+02, 3.9500e+02,\n",
              "        3.4300e+02, 3.4800e+02, 3.0600e+02, 2.7700e+02, 2.4700e+02,\n",
              "        2.6200e+02, 2.0200e+02, 2.0100e+02, 1.9500e+02, 1.8400e+02,\n",
              "        1.3400e+02, 1.6200e+02, 1.2800e+02, 1.2700e+02, 1.4300e+02,\n",
              "        1.1800e+02, 1.1600e+02, 7.5000e+01, 8.0000e+01, 8.7000e+01,\n",
              "        7.8000e+01, 6.6000e+01, 6.1000e+01, 6.1000e+01, 5.9000e+01,\n",
              "        5.3000e+01, 4.3000e+01, 3.6000e+01, 3.0000e+01, 3.8000e+01,\n",
              "        3.2000e+01, 2.4000e+01, 2.0000e+01, 1.7000e+01, 1.9000e+01,\n",
              "        1.8000e+01, 1.5000e+01, 1.9000e+01, 1.5000e+01, 1.3000e+01,\n",
              "        1.4000e+01, 1.4000e+01, 1.2000e+01, 6.0000e+00, 1.1000e+01,\n",
              "        4.0000e+00, 1.0000e+01, 9.0000e+00, 8.0000e+00, 2.0000e+00,\n",
              "        8.0000e+00, 2.0000e+00, 4.0000e+00, 6.0000e+00, 4.0000e+00,\n",
              "        3.0000e+00, 1.0000e+00, 3.0000e+00, 0.0000e+00, 2.0000e+00,\n",
              "        1.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00,\n",
              "        0.0000e+00, 1.0000e+00, 0.0000e+00, 1.0000e+00, 0.0000e+00,\n",
              "        1.0000e+00, 0.0000e+00, 0.0000e+00, 3.0000e+00, 1.0000e+00,\n",
              "        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0000e+00, 1.0000e+00]),\n",
              " array([ 5.18841826,  5.2153981 ,  5.24237793,  5.26935777,  5.2963376 ,\n",
              "         5.32331743,  5.35029727,  5.3772771 ,  5.40425693,  5.43123677,\n",
              "         5.4582166 ,  5.48519643,  5.51217627,  5.5391561 ,  5.56613593,\n",
              "         5.59311577,  5.6200956 ,  5.64707544,  5.67405527,  5.7010351 ,\n",
              "         5.72801494,  5.75499477,  5.7819746 ,  5.80895444,  5.83593427,\n",
              "         5.8629141 ,  5.88989394,  5.91687377,  5.9438536 ,  5.97083344,\n",
              "         5.99781327,  6.02479311,  6.05177294,  6.07875277,  6.10573261,\n",
              "         6.13271244,  6.15969227,  6.18667211,  6.21365194,  6.24063177,\n",
              "         6.26761161,  6.29459144,  6.32157128,  6.34855111,  6.37553094,\n",
              "         6.40251078,  6.42949061,  6.45647044,  6.48345028,  6.51043011,\n",
              "         6.53740994,  6.56438978,  6.59136961,  6.61834944,  6.64532928,\n",
              "         6.67230911,  6.69928895,  6.72626878,  6.75324861,  6.78022845,\n",
              "         6.80720828,  6.83418811,  6.86116795,  6.88814778,  6.91512761,\n",
              "         6.94210745,  6.96908728,  6.99606711,  7.02304695,  7.05002678,\n",
              "         7.07700662,  7.10398645,  7.13096628,  7.15794612,  7.18492595,\n",
              "         7.21190578,  7.23888562,  7.26586545,  7.29284528,  7.31982512,\n",
              "         7.34680495,  7.37378478,  7.40076462,  7.42774445,  7.45472429,\n",
              "         7.48170412,  7.50868395,  7.53566379,  7.56264362,  7.58962345,\n",
              "         7.61660329,  7.64358312,  7.67056295,  7.69754279,  7.72452262,\n",
              "         7.75150246,  7.77848229,  7.80546212,  7.83244196,  7.85942179,\n",
              "         7.88640162,  7.91338146,  7.94036129,  7.96734112,  7.99432096,\n",
              "         8.02130079,  8.04828062,  8.07526046,  8.10224029,  8.12922013,\n",
              "         8.15619996,  8.18317979,  8.21015963,  8.23713946,  8.26411929,\n",
              "         8.29109913,  8.31807896,  8.34505879,  8.37203863,  8.39901846,\n",
              "         8.42599829,  8.45297813,  8.47995796,  8.5069378 ,  8.53391763,\n",
              "         8.56089746,  8.5878773 ,  8.61485713,  8.64183696,  8.6688168 ,\n",
              "         8.69579663,  8.72277646,  8.7497563 ,  8.77673613,  8.80371596,\n",
              "         8.8306958 ,  8.85767563,  8.88465547,  8.9116353 ,  8.93861513,\n",
              "         8.96559497,  8.9925748 ,  9.01955463,  9.04653447,  9.0735143 ,\n",
              "         9.10049413,  9.12747397,  9.1544538 ,  9.18143363,  9.20841347,\n",
              "         9.2353933 ,  9.26237314,  9.28935297,  9.3163328 ,  9.34331264,\n",
              "         9.37029247,  9.3972723 ,  9.42425214,  9.45123197,  9.4782118 ,\n",
              "         9.50519164,  9.53217147,  9.55915131,  9.58613114,  9.61311097,\n",
              "         9.64009081,  9.66707064,  9.69405047,  9.72103031,  9.74801014,\n",
              "         9.77498997,  9.80196981,  9.82894964,  9.85592947,  9.88290931,\n",
              "         9.90988914,  9.93686898,  9.96384881,  9.99082864, 10.01780848,\n",
              "        10.04478831, 10.07176814, 10.09874798, 10.12572781, 10.15270764,\n",
              "        10.17968748, 10.20666731, 10.23364714, 10.26062698, 10.28760681,\n",
              "        10.31458665, 10.34156648, 10.36854631, 10.39552615, 10.42250598,\n",
              "        10.44948581, 10.47646565, 10.50344548, 10.53042531, 10.55740515,\n",
              "        10.58438498, 10.61136481, 10.63834465, 10.66532448, 10.69230432,\n",
              "        10.71928415, 10.74626398, 10.77324382, 10.80022365, 10.82720348,\n",
              "        10.85418332, 10.88116315, 10.90814298, 10.93512282, 10.96210265,\n",
              "        10.98908248, 11.01606232, 11.04304215, 11.07002199, 11.09700182,\n",
              "        11.12398165, 11.15096149, 11.17794132, 11.20492115, 11.23190099,\n",
              "        11.25888082, 11.28586065, 11.31284049, 11.33982032, 11.36680016,\n",
              "        11.39377999, 11.42075982, 11.44773966, 11.47471949, 11.50169932,\n",
              "        11.52867916, 11.55565899, 11.58263882, 11.60961866, 11.63659849,\n",
              "        11.66357832, 11.69055816, 11.71753799, 11.74451783, 11.77149766,\n",
              "        11.79847749, 11.82545733, 11.85243716, 11.87941699, 11.90639683,\n",
              "        11.93337666, 11.96035649, 11.98733633, 12.01431616, 12.04129599,\n",
              "        12.06827583, 12.09525566, 12.1222355 , 12.14921533, 12.17619516,\n",
              "        12.203175  , 12.23015483, 12.25713466, 12.2841145 , 12.31109433,\n",
              "        12.33807416, 12.365054  , 12.39203383, 12.41901366, 12.4459935 ,\n",
              "        12.47297333, 12.49995317, 12.526933  , 12.55391283, 12.58089267,\n",
              "        12.6078725 , 12.63485233, 12.66183217, 12.688812  , 12.71579183,\n",
              "        12.74277167, 12.7697515 , 12.79673133, 12.82371117, 12.850691  ,\n",
              "        12.87767084, 12.90465067, 12.9316305 , 12.95861034, 12.98559017,\n",
              "        13.01257   , 13.03954984, 13.06652967, 13.0935095 , 13.12048934,\n",
              "        13.14746917, 13.17444901, 13.20142884, 13.22840867, 13.25538851,\n",
              "        13.28236834, 13.30934817, 13.33632801, 13.36330784, 13.39028767,\n",
              "        13.41726751, 13.44424734, 13.47122717, 13.49820701, 13.52518684,\n",
              "        13.55216668, 13.57914651, 13.60612634, 13.63310618, 13.66008601,\n",
              "        13.68706584, 13.71404568, 13.74102551, 13.76800534, 13.79498518,\n",
              "        13.82196501, 13.84894484, 13.87592468, 13.90290451, 13.92988435,\n",
              "        13.95686418, 13.98384401, 14.01082385, 14.03780368, 14.06478351,\n",
              "        14.09176335, 14.11874318, 14.14572301, 14.17270285, 14.19968268,\n",
              "        14.22666251, 14.25364235, 14.28062218, 14.30760202, 14.33458185,\n",
              "        14.36156168, 14.38854152, 14.41552135, 14.44250118, 14.46948102,\n",
              "        14.49646085, 14.52344068, 14.55042052, 14.57740035, 14.60438018,\n",
              "        14.63136002, 14.65833985, 14.68531969, 14.71229952, 14.73927935,\n",
              "        14.76625919]),\n",
              " <a list of 355 Patch objects>)"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#2\n",
        "import numpy as np\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "\n",
        "np.random.seed(42)\n",
        "data = np.random.poisson(10, size=(1000000,))\n",
        "x = data[:500000]\n",
        "y = data[500000:]\n",
        "xedges = np.linspace(0, 20, 20)\n",
        "yedges = np.linspace(0, 20, 20)\n",
        "distribution, xedges, yedges = np.histogram2d(x, y, bins=(xedges, yedges))\n",
        "\n",
        "cs = plt.matshow(distribution)\n",
        "plt.colorbar(cs)\n",
        "\n",
        "#3\n",
        "data = np.random.randint(100, size=10000)\n",
        "arr=data.reshape(100,100)\n",
        "cs = plt.matshow(arr)\n",
        "plt.colorbar(cs)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "CitInVsrPBui",
        "outputId": "c049a743-a759-4230-abb5-85898d78a895"
      },
      "id": "CitInVsrPBui",
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.colorbar.Colorbar at 0x7f64e8b76790>"
            ]
          },
          "metadata": {},
          "execution_count": 64
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 288x288 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 288x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.10"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
